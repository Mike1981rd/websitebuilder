@{
    Layout = null; // BUENA PRÁCTICA: Asegura que esta vista no herede ningún layout.
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Preview</title>
    
    <!-- Material Icons para los iconos de las etiquetas -->
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    
    <!-- Google Material Symbols (Outlined) -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
    
    <!-- Website Builder CSS for animations and other styles -->
    <link rel="stylesheet" href="~/css/website-builder.css" asp-append-version="true" />
    
    <!-- Mantendremos la flexibilidad para añadir CSS globales aquí si es necesario -->
    <style>
        /* Reset básico */
        body, html {
            margin: 0;
            padding: 0;
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
            background-color: #F6F6F7; /* Un fondo gris claro como el de Shopify */
        }
        
        body {
            padding-top: 20px; /* Espacio para separar del header de la página */
        }
        
        /* Mobile-first responsive design */
        * {
            box-sizing: border-box;
        }
        
        img {
            max-width: 100%;
            height: auto;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
            image-rendering: -webkit-optimize-contrast;
            image-rendering: crisp-edges;
            -ms-interpolation-mode: bicubic;
            backface-visibility: hidden;
            transform: translateZ(0);
        }
        
        /* Container responsive */
        .container {
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 15px;
        }
        
        /* Mobile breakpoint */
        @@media (max-width: 480px) {
            body {
                padding-top: 10px;
            }
            
            .container {
                padding: 0 10px;
            }
            
            /* Stack elements vertically on mobile */
            .flex-row {
                flex-direction: column !important;
            }
            
            /* Adjust font sizes for mobile */
            h1 { font-size: 1.5rem; }
            h2 { font-size: 1.3rem; }
            h3 { font-size: 1.1rem; }
            p { font-size: 0.9rem; }
        }
        
        /* Tablet breakpoint */
        @@media (min-width: 481px) and (max-width: 768px) {
            .container {
                padding: 0 20px;
            }
        }
        
        /* Desktop breakpoint */
        @@media (min-width: 769px) {
            .container {
                padding: 0 30px;
            }
        }

        /* Contenedor principal de la sección seleccionable */
        .section-wrapper {
            position: relative;
            /* El borde ahora es un box-shadow para que no afecte al layout */
            box-shadow: 0 0 0 2px transparent;
            transition: box-shadow 0.2s ease-in-out;
            margin: 0; /* Sin separación entre bloques */
        }

        .section-wrapper:hover {
            box-shadow: 0 0 0 2px #2962ff; /* Borde azul al hacer hover */
        }

        /* Etiqueta de la sección (el 'header' del bloque) */
        .section-header-tag {
            display: none !important;
            position: absolute;
            top: -14px; /* Ligeramente por encima de la sección */
            left: 10px;
            background-color: #2962ff;
            color: white;
            padding: 5px 10px;
            font-size: 13px;
            font-weight: 500;
            border-radius: 6px;
            cursor: pointer;
            z-index: 10;
            user-select: none;
            align-items: center;
            gap: 6px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.15);
            opacity: 0;
            visibility: hidden;
            transition: opacity 0.2s ease, visibility 0.2s ease;
        }
        
        /* Hacemos visible la etiqueta con hover */
        .section-wrapper:hover .section-header-tag {
            display: flex !important;
            opacity: 1;
            visibility: visible;
        }

        /* Estilo para los nuevos iconos de Material Symbols */
        .material-symbols-outlined {
          font-variation-settings:
          'FILL' 0,
          'wght' 300,
          'GRAD' 0,
          'opsz' 20
        }
        
        /* Estilo adicional para mejorar la apariencia tipo Shopify */
        a {
            transition: opacity 0.2s ease;
        }
        
        a:hover {
            opacity: 0.7;
        }
    </style>
</head>
<body>
    <!-- El contenido de la previsualización, como Header, Footer, etc.,
         será inyectado aquí dinámicamente por website-builder.js -->
    
    <!-- jQuery (necesario para el funcionamiento) -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    
    <!-- Variables globales necesarias para el renderizado -->
    <script>
        // Variables globales que necesitan las funciones de renderizado
        let currentSectionsConfig = window.parent.currentSectionsConfig || {};
        let currentGlobalThemeSettings = window.parent.currentGlobalThemeSettings || {};
        let currentMenusData = window.parent.currentMenusData || [];
        let currentAnnouncementIndex = 0;
        let currentLanguage = window.parent.currentLanguage || 'es';
        
        // Helper function para obtener el nombre de la fuente
        window.getFontNameFromValueSafe = window.parent.getFontNameFromValueSafe || function(fontValue) {
            if (!fontValue) return 'Roboto';
            const fontMap = window.parent.globalFontMap || {
                'roboto': 'Roboto',
                'assistant': 'Assistant',
                'helvetica': 'Helvetica',
                'playfair-display': 'Playfair Display'
                // El resto del mapa se tomará del parent si está disponible
            };
            
            return fontMap[fontValue] || fontValue.split('-').map(word => 
                word.charAt(0).toUpperCase() + word.slice(1)
            ).join(' ');
        };
    </script>
    
    <!-- Funciones de renderizado compartidas -->
    <script src="~/js/website-render-functions.js?v=@DateTime.Now.Ticks"></script>
</body>
</html>